// <auto-generated />
using System;
using Ekka_Shopping.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ekka_Shopping.Migrations
{
    [DbContext(typeof(EkkaContext))]
    [Migration("20240514143021_Again")]
    partial class Again
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ekka_Shopping.Models.Category", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Category_Id"), 1L, 1);

                    b.Property<string>("Category_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender_id")
                        .HasColumnType("int");

                    b.HasKey("Category_Id");

                    b.HasIndex("Gender_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Gender", b =>
                {
                    b.Property<int>("gender_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gender_id"), 1L, 1);

                    b.Property<string>("gender_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("gender_id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Invoice", b =>
                {
                    b.Property<int>("Invoice_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Invoice_Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("Order_Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Invoice_Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Order", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_Id"), 1L, 1);

                    b.Property<int?>("Order_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Order_Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Product", b =>
                {
                    b.Property<int>("Pro_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pro_Id"), 1L, 1);

                    b.Property<string>("Pro_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pro_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pro_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pro_Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("Subcategory_id")
                        .HasColumnType("int");

                    b.HasKey("Pro_Id");

                    b.HasIndex("Subcategory_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Subcategory", b =>
                {
                    b.Property<int>("subcategory_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subcategory_id"), 1L, 1);

                    b.Property<int?>("category_id")
                        .HasColumnType("int");

                    b.Property<string>("subcategory_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subcategory_id");

                    b.HasIndex("category_id");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Category", b =>
                {
                    b.HasOne("Ekka_Shopping.Models.Gender", "Gender")
                        .WithMany("Categories")
                        .HasForeignKey("Gender_id");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Invoice", b =>
                {
                    b.HasOne("Ekka_Shopping.Models.Order", "Order")
                        .WithMany("Invoices")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ekka_Shopping.Models.Product", "Product")
                        .WithMany("Invoices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Order", b =>
                {
                    b.HasOne("Ekka_Shopping.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Payment", b =>
                {
                    b.HasOne("Ekka_Shopping.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Product", b =>
                {
                    b.HasOne("Ekka_Shopping.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("Subcategory_id");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Subcategory", b =>
                {
                    b.HasOne("Ekka_Shopping.Models.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.User", b =>
                {
                    b.HasOne("Ekka_Shopping.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Category", b =>
                {
                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Gender", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Order", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Product", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Ekka_Shopping.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
